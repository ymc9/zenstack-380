//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider="postgresql"
    url=env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id String @id() @unique() @default(uuid()) @db.Uuid()
    projects Project[]
    zenstack_guard Boolean @default(true)
}

/// @@allow('all', owner == auth())
model Project {
    id String @id() @unique() @default(uuid()) @db.Uuid()
    documents Document[]
    ownerID String @db.Uuid()
    owner User @relation(fields: [ownerID], references: [id])
    zenstack_guard Boolean @default(true)
    zenstack_transaction String?
    @@index([zenstack_transaction])
}

/// @@allow('read', isPublic)
/// @@allow('all', project.owner == auth())
model Document {
    id String @id() @default(uuid()) @db.Uuid()
    projectID String @db.Uuid()
    project Project @relation(fields: [projectID], references: [id], onDelete: NoAction, onUpdate: NoAction)
    isPublic Boolean @default(false)
    diagramDocuments DiagramDocument[]
    zenstack_guard Boolean @default(true)
    zenstack_transaction String?
    @@index([zenstack_transaction])
}

/// @@allow('read', document.isPublic)
/// @@allow('all', document.project.owner == auth())
model DiagramDocument {
    id String @id() @default(uuid()) @db.Uuid()
    documentID String @db.Uuid()
    document Document @relation(fields: [documentID], references: [id], onDelete: Cascade, onUpdate: NoAction)
    zenstack_guard Boolean @default(true)
    zenstack_transaction String?
    @@index([zenstack_transaction])
}